// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZhiKeCore.Models;

namespace ZhiKeCore.Models.Migrations
{
    [DbContext(typeof(ZhikeDbContext))]
    [Migration("20190106134152_intialCreate")]
    partial class intialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZhiKeCore.Models.AdminUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("Modifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("PasswordSalt");

                    b.Property<string>("RealName");

                    b.HasKey("Id");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("ZhiKeCore.Models.Article", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdminUserId");

                    b.Property<string>("CategoryId");

                    b.Property<string>("Content");

                    b.Property<string>("Cover");

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("Modifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("SubCategoryId");

                    b.Property<string>("Tags");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("AdminUserId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("ZhiKeCore.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<string>("FieldId");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("Modifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ZhiKeCore.Models.Comment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArticleId");

                    b.Property<string>("Content");

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("Modifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ZhiKeCore.Models.Field", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("Modifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("ZhiKeCore.Models.SubCategory", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryId");

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("Creator");

                    b.Property<string>("Description");

                    b.Property<DateTimeOffset>("Modified");

                    b.Property<string>("Modifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("ZhiKeCore.Models.Article", b =>
                {
                    b.HasOne("ZhiKeCore.Models.AdminUser", "AdminUser")
                        .WithMany()
                        .HasForeignKey("AdminUserId");

                    b.HasOne("ZhiKeCore.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("ZhiKeCore.Models.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId");
                });

            modelBuilder.Entity("ZhiKeCore.Models.Category", b =>
                {
                    b.HasOne("ZhiKeCore.Models.Field", "Field")
                        .WithMany("Categories")
                        .HasForeignKey("FieldId");
                });

            modelBuilder.Entity("ZhiKeCore.Models.Comment", b =>
                {
                    b.HasOne("ZhiKeCore.Models.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId");
                });

            modelBuilder.Entity("ZhiKeCore.Models.SubCategory", b =>
                {
                    b.HasOne("ZhiKeCore.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
